pragma solidity ^0.5.8;

import "../../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol";
import "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol";

import "./../Admin/Authorizable.sol";

//import "./../Roles/DistributorRole.sol";

contract ERC20Coupon is ERC20Mintable, Authorizable{
    using SafeMath for uint256;
    
    function transfer(address recipient, uint256 amount) public requireAuthorizedCaller returns (bool){
        return super.transfer(recipient, amount);
    }

    function transferFrom(address sender, address recipient, uint256 amount) public requireAuthorizedCaller returns (bool){
        return super.transferFrom(sender, recipient, amount);
    }

    function approve(address spender, uint256 amount) public requireAuthorizedCaller returns (bool){
        return super.approve(spender, amount);
    }

    function mint(address account, uint256 amount) public requireAuthorizedCaller returns (bool){
        return super.mint(account, amount);
    }

    function increaseAllowance(address spender, uint256 addedValue) public requireAuthorizedCaller returns (bool){
        return super.increaseAllowance(spender, addedValue);
    }

    function decreaseAllowance(address spender, uint256 subtractedValue) public requireAuthorizedCaller returns (bool){
        return super.decreaseAllowance(spender, subtractedValue);
    }
}